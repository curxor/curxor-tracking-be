//#region
// import { Types } from "mongoose";
// import { IUser } from "../models/user.model";
// import { createCategoryDto } from "../dtos/category/create-category.dto";
// import { title } from "process";
// import { validateLocaleAndSetLanguage } from "typescript";

// export const mockUser: IUser = {
//   _id: new Types.ObjectId(),
//   name: "Bao Ngoc",
//   email: "ngoc@example.com",
//   avatar: "https://example.com/avatar.png",
//   balance: 1000,
// };

// export const mockCategory: createCategoryDto = {
//   name: "Food",
//   description: "Monthly food budget",
//   icon: "üçïüçï",
//   type: "expense",
//   user: mockUser,
// };

// export const mockCategoryId = new Types.ObjectId();

// export const mockCategories: createCategoryDto[] = [
//   {
//     name: "Food",
//     description: "Monthly food budget",
//     icon: "üçï",
//     type: "expense",
//     user: mockUser,
//   },
//   {
//     name: "Transport",
//     description: "Daily transport",
//     icon: "üöó",
//     type: "expense",
//     user: mockUser,
//   },
//   {
//     name: "Entertainment",
//     description: "Movies and music",
//     icon: "üé¨",
//     type: "expense",
//     user: mockUser,
//   },
//   // {
//   //   name: "Education",
//   //   description: "Courses and books",
//   //   icon: "üìö",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Travel",
//   //   description: "Travel expenses",
//   //   icon: "‚úàÔ∏è",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Shopping",
//   //   description: "Buying stuff",
//   //   icon: "üõí",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Insurance",
//   //   description: "Health and life insurance",
//   //   icon: "üõ°Ô∏è",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Gifts",
//   //   description: "Gifts for others",
//   //   icon: "üéÅ",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Subscriptions",
//   //   description: "Monthly subscriptions",
//   //   icon: "üí≥",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Home",
//   //   description: "Home expenses",
//   //   icon: "üè†",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Pets",
//   //   description: "Pet care",
//   //   icon: "üê∂",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Utilities",
//   //   description: "Electricity and water",
//   //   icon: "‚ö°",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Clothing",
//   //   description: "Clothes and accessories",
//   //   icon: "üëó",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Investments",
//   //   description: "Stock and bonds",
//   //   icon: "üìà",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
//   // {
//   //   name: "Childcare",
//   //   description: "Expenses for children",
//   //   icon: "üë∂",
//   //   type: "expense",
//   //   user: mockUser,
//   // },
// ];
// export const validCategoryData = {
//   name: "Food", // 3 - 50 k√Ω t·ª±
//   description: "Monthly food budget", // t·ªëi ƒëa 200 k√Ω t·ª±
//   icon: "üçï",
//   type: "expense",
//   user: mockUser,
// };

// export const createCategoryTestCase = [
//   {
//     title: "‚úÖ T·∫°o danh m·ª•c kh√¥ng c√≥ symbol",
//     input: { ...validCategoryData, symbol: undefined },
//     expected: { success: true },
//   },
//   {
//     title: "‚ùå L·ªói: Thi·∫øu name",
//     input: { ...validCategoryData, name: undefined },
//     expected: {
//       success: false,
//       error: "Category validation failed: name: Path `name` is required",
//     },
//   },
//   {
//     title: "‚ùå L·ªói: name qu√° ng·∫Øn (< 3 k√Ω t·ª±)",
//     input: { ...validCategoryData, name: "ƒÇ" }, // 1 k√Ω t·ª±
//     expected: { success: false, error: "Name must be at least 3 characters" },
//   },
//   {
//     title: "‚úÖ T·∫°o danh m·ª•c v·ªõi name c√≥ ƒë·ªô d√†i 3 k√Ω t·ª±",
//     input: { ...validCategoryData, name: "abc" },
//     expected: { success: true },
//   },
//   {
//     title: "‚ùå L·ªói: name qu√° d√†i (> 50 k√Ω t·ª±)",
//     input: { ...validCategoryData, name: "A".repeat(51) },
//     expected: { success: false, error: "Name must be less than 50 characters" },
//   },
// ];
//#region New
// import { Types } from "mongoose";
// import { IUser } from "../models/user.model";
// import { createCategoryDto } from "../dtos/category/create-category.dto";
// import { title } from "process";
// import { validateLocaleAndSetLanguage } from "typescript";
// import { editCategoryDto } from "../dtos/category/edit-category.dto";
// //#region mockUser
// export const mockUser: IUser = {
//   _id: new Types.ObjectId(),
//   name: "BaoNgoc",
//   email: "ngoc@example.com",
//   avatar: "https://example.com/avatar.png",
//   balance: 1000,
// };
//#endregion
//#endregion
// export const mockCategory: createCategoryDto = {
//   name: "Food",
//   description: "Monthly food budget",
//   icon: "üçïüçï",
//   type: "expense",
//   user: mockUser,
// };

// export const mockCategoryId = new Types.ObjectId();

// export const mockCategories: createCategoryDto[] = [
//   {
//     name: "Food",
//     description: "Monthly food budget",
//     icon: "üçï",
//     type: "expense",
//     user: mockUser,
//   },
//   {
//     name: "Transport",
//     description: "Daily transport",
//     icon: "üöó",
//     type: "expense",
//     user: mockUser,
//   },
//   {
//     name: "Entertainment",
//     description: "Movies and music",
//     icon: "üé¨",
//     type: "expense",
//     user: mockUser,
//   },
// ];
//#region mockCategory: createCategoryDto
//#region New
// export const validCategoryData = {
//   user: mockUser,
//   description: "Monthly food budget", // t·ªëi ƒëa 200 k√Ω t·ª±
//   name: "Food", // 3 - 50 k√Ω t·ª±
//   icon: "a.png",
//   type: "expense",
// };

// export const categoryTestCases = [
//   {
//     title: "‚úÖ T·∫°o danh m·ª•c kh√¥ng c√≥ icon",
//     input: { ...validCategoryData, icon: "" },
//     expected: { success: true },
//   },
//   {
//     title: "‚ùå L·ªói: Thi·∫øu name",
//     input: { ...validCategoryData, name: "" },
//     expected: {
//       success: false,
//       error: "Category validation failed: name: Path `name` is required",
//     },
//   },
//   {
//     title: "‚ùå L·ªói: name qu√° ng·∫Øn (< 3 k√Ω t·ª±)",
//     input: { ...validCategoryData, name: "ƒÇ" }, // 1 k√Ω t·ª±
//     expected: { success: false, error: "Name must be at least 3 characters" },
//   },
//   {
//     title: "‚úÖ T·∫°o danh m·ª•c v·ªõi name c√≥ ƒë·ªô d√†i 3 k√Ω t·ª±",
//     input: { ...validCategoryData, name: "abc" },
//     expected: { success: true },
//   },
//   {
//     title: "‚ùå L·ªói: name qu√° d√†i (> 50 k√Ω t·ª±)",
//     input: { ...validCategoryData, name: "A".repeat(51) },
//     expected: { success: false, error: "Name must be less than 50 characters" },
//   },
// ];
//#endregion
//#endregion
//#region Test Case findCategory
//#region New
// const invalidId = "123"; // ‚ùå Kh√¥ng ph·∫£i l√† chu·ªói hex 24 k√Ω t·ª±
// export const unmatchedUser = {
//   _id: new Types.ObjectId().toString(), // User ID kh√°c
// };

// export const validFindCategoryData = {
//   _id: new Types.ObjectId().toString(),
//   user: mockUser,
//   name: "Test Category",
//   description: "Test Description",
//   icon: "test-icon",
//   amount: 500,
//   type: "expense",
// };
// export const findCategoryTestCases = [
//   {
//     title: "‚úÖ T√¨m danh m·ª•c th√†nh c√¥ng",
//     input: validFindCategoryData,
//     expected: { success: true },
//   },
//   {
//     title: "‚ùå L·ªói: Thi·∫øu ID",
//     input: { _id: "", user: mockUser },
//     expected: {
//       error:
//         "input must be a 24 character hex string, 12 byte Uint8Array, or an integer",
//     },
//   },

//   {
//     title: "‚ùå L·ªói: ID kh√¥ng h·ª£p l·ªá",
//     input: { _id: invalidId, user: mockUser },
//     expected: { success: false, error: "Category not found" },
//   },
//   {
//     title: "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y danh m·ª•c",
//     input: {
//       ...validFindCategoryData,
//       _id: new Types.ObjectId().toString(), // ID kh√¥ng t·ªìn t·∫°i trong DB
//     },
//     expected: { success: false, error: "Category not found" },
//   },
//   {
//     title: "‚ùå L·ªói: Kh√¥ng kh·ªõp User ID",
//     input: {
//       ...validFindCategoryData,
//       user: unmatchedUser, // User kh√¥ng kh·ªõp{ _id: new Types.ObjectId().toString() }
//     },
//     expected: { success: false, error: "Category not found" },
//   },
// ];
//#endregion
//#endregion

//#region Test Case updateCategory
//#region New
// export const mockCategory = {
//   user: mockUser,
//   name: "Original Category",
//   description: "Original Description",
//   icon: "b.png",
//   amount: 1000,
//   type: "expense",
//   updateOne: jest.fn().mockResolvedValue(undefined),
// };
//#endregion
// Gi·∫£ l·∫≠p d·ªØ li·ªáu ch·ªânh s·ª≠a Category
// export const mockEditCategoryDto: editCategoryDto = {
//   _id: new Types.ObjectId(),
//   user: mockUser,
//   name: "Updated Category",
//   description: "Updated Description",
//   icon: "updated-icon",
//   amount: 500,
//   type: "income",
// };
//#endregion
//#endregion
//#region Version 02
import { Types } from "mongoose";
import { createCategoryDto } from "../dtos/category/create-category.dto";
import { IUser } from "../models/user.model";
export const createMockUser = (override?: Partial<IUser>): IUser => ({
  _id: new Types.ObjectId(),
  name: "Bao Ngoc",
  email: "ngoc@example.com",
  avatar: "https://example.com/avatar.png",
  balance: 1000,
  ...override,
});
export const createMockCategory = (
  override?: Partial<createCategoryDto>
): createCategoryDto => ({
  name: "Food",
  description: "Monthly food budget",
  icon: "üçï",
  type: "expense",
  user: createMockUser(),
  ...override,
});
export const validCategoryData = createMockCategory();

// export const mockCategoryId = new Types.ObjectId().toString();
export const categoryTestCases = [
  {
    title: "‚úÖ T·∫°o danh m·ª•c th√†nh c√¥ng",
    input: createMockCategory({
      name: "Travel",
      description: "Travel International",
      icon: "sample-icon.png",
      type: "expense",
    }),
    expected: {
      id: "1",
      ...createMockCategory({
        name: "Travel",
        description: "Travel International",
        icon: "icon.png",
        type: "expense",
      }),
    },
  },
  {
    title: "‚ùå L·ªói khi thi·∫øu tr∆∞·ªùng name",
    input: createMockCategory({
      name: "",
      description: "Travel International",
      icon: "icon.png",
      type: "expense",
    }),
    expected: new Error("D·ªØ li·ªáu danh m·ª•c kh√¥ng h·ª£p l·ªá"),
  },
  {
    title: "‚ùå L·ªói khi s·ªë l∆∞·ª£ng k√Ω t·ª± name nh·ªè h∆°n 3",
    input: createMockCategory({
      name: "Tr",
      description: "Travel International",
      icon: "icon.png",
      type: "",
    }),
    expected: new Error("D·ªØ li·ªáu danh m·ª•c kh√¥ng h·ª£p l·ªá"),
  },
  {
    title: "‚ùå L·ªói khi s·ªë l∆∞·ª£ng k√Ω t·ª± name l·ªõn h∆°n 50",
    input: createMockCategory({
      name: "Tr".repeat(51),
      description: "Travel International",
      icon: "icon.png",
      type: "",
    }),
    expected: new Error("D·ªØ li·ªáu danh m·ª•c kh√¥ng h·ª£p l·ªá"),
  },
  {
    title: "‚ùå L·ªói khi thi·∫øu tr∆∞·ªùng description",
    input: createMockCategory({
      name: "Travel",
      description: "",
      icon: "icon.png",
      type: "expense",
    }),
    expected: new Error("Description is required"), // ‚úÖ Th√™m th√¥ng b√°o l·ªói ch√≠nh x√°c
  },
  {
    title: "‚ùå L·ªói khi thi·∫øu tr∆∞·ªùng icon",
    input: createMockCategory({
      name: "Travel",
      description: "Travel International",
      icon: "",
      type: "expense",
    }),
    expected: new Error("D·ªØ li·ªáu danh m·ª•c kh√¥ng h·ª£p l·ªá"),
  },
  {
    title: "‚ùå L·ªói khi thi·∫øu tr∆∞·ªùng type",
    input: createMockCategory({
      name: "Travel",
      description: "Travel International",
      icon: "icon.png",
      type: "", // ‚úÖ ƒê∆∞·ª£c chuy·ªÉn th√†nh undefined => B·ªã b·∫Øt l·ªói "Type is required"
    }),
    expected: new Error("Type is required"),
  },
  
  {
    title: "‚ùå L·ªói khi s·ªë l∆∞·ª£ng k√Ω t·ª± description l·ªõn h∆°n 200",
    input: createMockCategory({
      name: "a".repeat(250),
      description: "Travel International",
      icon: "icon.png",
      type: "",
    }),
    expected: new Error("D·ªØ li·ªáu danh m·ª•c kh√¥ng h·ª£p l·ªá"),
  },
];

//#endregion
